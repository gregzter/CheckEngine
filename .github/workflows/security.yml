name: Security Analysis

# Temporairement désactivé - nécessite configuration
on:
  workflow_dispatch:  # Manuel uniquement
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main, develop ]
  # schedule:
  #   # Tous les lundis à 9h (UTC)
  #   - cron: '0 9 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  symfony-security:
    name: Symfony Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2

      - name: 📥 Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        working-directory: backend-symfony

      - name: 🔒 Symfony Security Check
        uses: symfonycorp/security-checker-action@v5
        with:
          lock: backend-symfony/composer.lock

      - name: 📊 Upload security report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: security-vulnerabilities
          path: backend-symfony/composer.lock

  codeql:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: 'javascript,python'
          queries: security-extended,security-and-quality

      - name: 🔨 Autobuild
        uses: github/codeql-action/autobuild@v4

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:javascript,python"

  docker-security:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Build Symfony Docker image
        run: docker build -f docker/symfony/Dockerfile -t checkengine-symfony:test .

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'checkengine-symfony:test'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: 📊 Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 🔍 Trivy detailed report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'checkengine-symfony:test'
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM'

  owasp-dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'CheckEngine'
          path: '.'
          format: 'ALL'
          args: >
            --enableRetired
            --scan backend-symfony/composer.lock
            --scan backend-python/requirements.txt

      - name: 📊 Upload OWASP results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check-report
          path: reports/

  secrets-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog Secrets Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --debug --only-verified

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [symfony-security, docker-security, secrets-scan]
    if: always()
    
    steps:
      - name: 📊 Security Status
        run: |
          echo "## 🔒 Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Symfony Security Check: ${{ needs.symfony-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Docker Security Scan: ${{ needs.docker-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Secrets Scan: ${{ needs.secrets-scan.result }}" >> $GITHUB_STEP_SUMMARY
