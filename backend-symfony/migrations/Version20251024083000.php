<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Migration pour TimescaleDB: crÃ©ation hypertable trip_data + policies
 */
final class Version20251024083000 extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Create TripDiagnostic table and TripData hypertable for TimescaleDB with compression and retention';
    }

    public function up(Schema $schema): void
    {
        // 1. Create trip_diagnostic table
        $this->addSql('CREATE TABLE IF NOT EXISTS trip_diagnostic (
            id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
            category VARCHAR(50) NOT NULL,
            status VARCHAR(20) NOT NULL,
            score INT NOT NULL,
            confidence VARCHAR(20) NOT NULL,
            details JSON NOT NULL,
            messages JSON NOT NULL,
            recommendations JSON NOT NULL,
            created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL,
            trip_id INT NOT NULL,
            PRIMARY KEY (id)
        )');
        $this->addSql('CREATE INDEX IF NOT EXISTS IDX_F6E539FA5BC2E0E ON trip_diagnostic (trip_id)');
        $this->addSql('DO $$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = \'fk_f6e539fa5bc2e0e\') THEN
                ALTER TABLE trip_diagnostic ADD CONSTRAINT FK_F6E539FA5BC2E0E FOREIGN KEY (trip_id) REFERENCES trip (id) NOT DEFERRABLE;
            END IF;
        END $$;');

        // 2. Create trip_data table with composite primary key for TimescaleDB
        $this->addSql('CREATE SEQUENCE IF NOT EXISTS trip_data_id_seq START 1');
        $this->addSql('CREATE TABLE IF NOT EXISTS trip_data (
            id INT NOT NULL DEFAULT nextval(\'trip_data_id_seq\'),
            timestamp TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL,
            trip_id INT NOT NULL,
            pid_name VARCHAR(50) NOT NULL,
            value NUMERIC(10, 4) DEFAULT NULL,
            unit VARCHAR(20) DEFAULT NULL,
            PRIMARY KEY (id, timestamp)
        )');

        // 3. Create indexes
        $this->addSql('CREATE INDEX IF NOT EXISTS idx_trip_timestamp ON trip_data (trip_id, timestamp DESC)');
        $this->addSql('CREATE INDEX IF NOT EXISTS idx_pid_timestamp ON trip_data (pid_name, timestamp DESC)');

        // 4. Convert to TimescaleDB hypertable (7-day chunks)
        $this->addSql("
            SELECT create_hypertable(
                'trip_data',
                'timestamp',
                chunk_time_interval => INTERVAL '7 days',
                if_not_exists => TRUE
            )
        ");

        // 5. Enable compression (segment by trip_id for better compression)
        $this->addSql("
            ALTER TABLE trip_data SET (
                timescaledb.compress,
                timescaledb.compress_segmentby = 'trip_id'
            )
        ");

        // 6. Add compression policy (compress after 7 days)
        $this->addSql("
            SELECT add_compression_policy(
                'trip_data',
                INTERVAL '7 days',
                if_not_exists => TRUE
            )
        ");

        // 7. Add retention policy (drop after 1 year)
        $this->addSql("
            SELECT add_retention_policy(
                'trip_data',
                INTERVAL '365 days',
                if_not_exists => TRUE
            )
        ");
    }

    public function down(Schema $schema): void
    {
        // Remove TimescaleDB policies
        $this->addSql("SELECT remove_retention_policy('trip_data', if_exists => TRUE)");
        $this->addSql("SELECT remove_compression_policy('trip_data', if_exists => TRUE)");

        // Drop tables
        $this->addSql('DROP TABLE IF EXISTS trip_data CASCADE');
        $this->addSql('DROP SEQUENCE IF EXISTS trip_data_id_seq CASCADE');

        $this->addSql('ALTER TABLE IF EXISTS trip_diagnostic DROP CONSTRAINT IF EXISTS FK_F6E539FA5BC2E0E');
        $this->addSql('DROP TABLE IF EXISTS trip_diagnostic CASCADE');
    }
}
